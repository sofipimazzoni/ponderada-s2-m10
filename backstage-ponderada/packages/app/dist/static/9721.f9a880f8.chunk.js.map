{"version":3,"file":"static/9721.f9a880f8.chunk.js","mappings":"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","sources":["webpack://app/../../node_modules/@backstage/plugin-api-docs/dist/esm/ApiTypeTitle-Q7DWBnfV.esm.js","webpack://app/../../node_modules/@backstage/plugin-api-docs/dist/esm/ProvidedApisCard-DYM2U8N2.esm.js"],"sourcesContent":["import React from 'react';\nimport { CodeSnippet } from '@backstage/core-components';\nimport Typography from '@material-ui/core/Typography';\nimport { a as apiDocsConfigRef } from './ApiDefinitionWidget-B2Z_EBYd.esm.js';\nimport { useApi } from '@backstage/core-plugin-api';\n\nconst PlainApiDefinitionWidget = (props) => {\n  return /* @__PURE__ */ React.createElement(\n    CodeSnippet,\n    {\n      text: props.definition,\n      language: props.language,\n      showCopyCodeButton: true\n    }\n  );\n};\n\nconst ApiTypeTitle = (props) => {\n  const { apiEntity } = props;\n  const config = useApi(apiDocsConfigRef);\n  const definition = config.getApiDefinitionWidget(apiEntity);\n  const type = definition ? definition.title : apiEntity.spec.type;\n  return /* @__PURE__ */ React.createElement(Typography, { component: \"span\" }, type);\n};\n\nexport { ApiTypeTitle as A, PlainApiDefinitionWidget as P };\n//# sourceMappingURL=ApiTypeTitle-Q7DWBnfV.esm.js.map\n","import { RELATION_CONSUMES_API, RELATION_HAS_PART, RELATION_PROVIDES_API } from '@backstage/catalog-model';\nimport Typography from '@material-ui/core/Typography';\nimport { EntityTable, useEntity, useRelatedEntities } from '@backstage/plugin-catalog-react';\nimport React, { useEffect, useState } from 'react';\nimport { InfoCard, Progress, WarningPanel, CodeSnippet, Link } from '@backstage/core-components';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport '@material-ui/lab/Alert';\nimport { a as apiDocsConfigRef } from './ApiDefinitionWidget-B2Z_EBYd.esm.js';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { P as PlainApiDefinitionWidget, A as ApiTypeTitle } from './ApiTypeTitle-Q7DWBnfV.esm.js';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\n\nconst useStyles = makeStyles((theme) => ({\n  fullHeightDialog: {\n    height: \"calc(100% - 64px)\"\n  },\n  root: {\n    display: \"flex\",\n    flexGrow: 1,\n    width: \"100%\",\n    height: \"100%\"\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n    flexShrink: 0\n  },\n  tabContents: {\n    flexGrow: 1,\n    overflowX: \"auto\"\n  },\n  title: {\n    color: theme.palette.text.primary,\n    wordBreak: \"break-word\",\n    fontSize: theme.typography.h3.fontSize,\n    marginBottom: 0\n  },\n  type: {\n    textTransform: \"uppercase\",\n    fontSize: 11,\n    opacity: 0.8,\n    marginBottom: theme.spacing(1),\n    color: theme.palette.text.primary\n  }\n}));\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  const classes = useStyles();\n  return /* @__PURE__ */ React.createElement(\n    \"div\",\n    {\n      role: \"tabpanel\",\n      hidden: value !== index,\n      id: `vertical-tabpanel-${index}`,\n      \"aria-labelledby\": `vertical-tab-${index}`,\n      className: classes.tabContents,\n      ...other\n    },\n    value === index && /* @__PURE__ */ React.createElement(Box, { pl: 3, pr: 3 }, children)\n  );\n}\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    \"aria-controls\": `vertical-tabpanel-${index}`\n  };\n}\nfunction ApiDefinitionDialog(props) {\n  var _a, _b, _c;\n  const { open, entity, onClose } = props;\n  const [activeTab, setActiveTab] = React.useState(0);\n  const classes = useStyles();\n  useEffect(() => {\n    setActiveTab(0);\n  }, [open]);\n  const config = useApi(apiDocsConfigRef);\n  const definitionWidget = config.getApiDefinitionWidget(entity);\n  let tabIndex = 0;\n  let tabPanelIndex = 0;\n  return /* @__PURE__ */ React.createElement(\n    Dialog,\n    {\n      fullWidth: true,\n      maxWidth: \"xl\",\n      open,\n      onClose,\n      \"aria-labelledby\": \"api-definition-dialog-title\",\n      PaperProps: { className: classes.fullHeightDialog }\n    },\n    /* @__PURE__ */ React.createElement(DialogTitle, { id: \"api-definition-dialog-title\", disableTypography: true }, /* @__PURE__ */ React.createElement(Typography, { className: classes.type }, \"API - \", (_a = definitionWidget == null ? void 0 : definitionWidget.title) != null ? _a : \"Raw\"), /* @__PURE__ */ React.createElement(Typography, { className: classes.title, variant: \"h1\" }, (_b = entity.metadata.title) != null ? _b : entity.metadata.name)),\n    /* @__PURE__ */ React.createElement(DialogContent, { dividers: true, className: classes.root }, /* @__PURE__ */ React.createElement(\n      Tabs,\n      {\n        orientation: \"vertical\",\n        variant: \"scrollable\",\n        value: activeTab,\n        onChange: (_, newValue) => setActiveTab(newValue),\n        \"aria-label\": \"API definition options\",\n        className: classes.tabs\n      },\n      definitionWidget ? /* @__PURE__ */ React.createElement(Tab, { label: definitionWidget.title, ...a11yProps(tabIndex++) }) : null,\n      /* @__PURE__ */ React.createElement(Tab, { label: \"Raw\", ...a11yProps(tabIndex++) })\n    ), definitionWidget ? /* @__PURE__ */ React.createElement(TabPanel, { value: activeTab, index: tabPanelIndex++ }, definitionWidget.component(entity.spec.definition)) : null, /* @__PURE__ */ React.createElement(TabPanel, { value: activeTab, index: tabPanelIndex++ }, /* @__PURE__ */ React.createElement(\n      PlainApiDefinitionWidget,\n      {\n        definition: entity.spec.definition,\n        language: (_c = definitionWidget == null ? void 0 : definitionWidget.rawLanguage) != null ? _c : entity.spec.type\n      }\n    ))),\n    /* @__PURE__ */ React.createElement(DialogActions, null, /* @__PURE__ */ React.createElement(Button, { onClick: onClose, color: \"primary\" }, \"Close\"))\n  );\n}\n\nfunction createSpecApiTypeColumn() {\n  return {\n    title: \"Type\",\n    field: \"spec.type\",\n    render: (entity) => /* @__PURE__ */ React.createElement(ApiTypeTitle, { apiEntity: entity })\n  };\n}\nconst ApiDefinitionButton = ({ apiEntity }) => {\n  const [dialogOpen, setDialogOpen] = useState(false);\n  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(\n    ToggleButton,\n    {\n      \"aria-label\": \"Toggle API Definition Dialog\",\n      onClick: () => setDialogOpen(!dialogOpen)\n    },\n    /* @__PURE__ */ React.createElement(ExtensionIcon, null)\n  ), /* @__PURE__ */ React.createElement(\n    ApiDefinitionDialog,\n    {\n      entity: apiEntity,\n      open: dialogOpen,\n      onClose: () => setDialogOpen(false)\n    }\n  ));\n};\nfunction createApiDefinitionColumn() {\n  return {\n    title: \"API Definition\",\n    render: (entity) => /* @__PURE__ */ React.createElement(ApiDefinitionButton, { apiEntity: entity })\n  };\n}\nconst apiEntityColumns = [\n  EntityTable.columns.createEntityRefColumn({ defaultKind: \"API\" }),\n  EntityTable.columns.createSystemColumn(),\n  EntityTable.columns.createOwnerColumn(),\n  createSpecApiTypeColumn(),\n  EntityTable.columns.createSpecLifecycleColumn(),\n  EntityTable.columns.createMetadataDescriptionColumn(),\n  createApiDefinitionColumn()\n];\n\nconst ConsumedApisCard = (props) => {\n  const { variant = \"gridItem\", columns = apiEntityColumns } = props;\n  const { entity } = useEntity();\n  const { entities, loading, error } = useRelatedEntities(entity, {\n    type: RELATION_CONSUMES_API\n  });\n  if (loading) {\n    return /* @__PURE__ */ React.createElement(InfoCard, { variant, title: \"Consumed APIs\" }, /* @__PURE__ */ React.createElement(Progress, null));\n  }\n  if (error || !entities) {\n    return /* @__PURE__ */ React.createElement(InfoCard, { variant, title: \"Consumed APIs\" }, /* @__PURE__ */ React.createElement(\n      WarningPanel,\n      {\n        severity: \"error\",\n        title: \"Could not load APIs\",\n        message: /* @__PURE__ */ React.createElement(CodeSnippet, { text: `${error}`, language: \"text\" })\n      }\n    ));\n  }\n  return /* @__PURE__ */ React.createElement(\n    EntityTable,\n    {\n      title: \"Consumed APIs\",\n      variant,\n      emptyContent: /* @__PURE__ */ React.createElement(\"div\", { style: { textAlign: \"center\" } }, /* @__PURE__ */ React.createElement(Typography, { variant: \"body1\" }, \"This \", entity.kind.toLocaleLowerCase(\"en-US\"), \" does not consume any APIs.\"), /* @__PURE__ */ React.createElement(Typography, { variant: \"body2\" }, /* @__PURE__ */ React.createElement(Link, { to: \"https://backstage.io/docs/features/software-catalog/descriptor-format#specconsumesapis-optional\" }, \"Learn how to change this.\"))),\n      columns,\n      entities\n    }\n  );\n};\n\nconst presetColumns = [\n  EntityTable.columns.createEntityRefColumn({ defaultKind: \"API\" }),\n  EntityTable.columns.createOwnerColumn(),\n  createSpecApiTypeColumn(),\n  EntityTable.columns.createSpecLifecycleColumn(),\n  EntityTable.columns.createMetadataDescriptionColumn()\n];\nconst HasApisCard = (props) => {\n  const { variant = \"gridItem\", columns = presetColumns } = props;\n  const { entity } = useEntity();\n  const { entities, loading, error } = useRelatedEntities(entity, {\n    type: RELATION_HAS_PART,\n    kind: \"API\"\n  });\n  if (loading) {\n    return /* @__PURE__ */ React.createElement(InfoCard, { variant, title: \"APIs\" }, /* @__PURE__ */ React.createElement(Progress, null));\n  }\n  if (error || !entities) {\n    return /* @__PURE__ */ React.createElement(InfoCard, { variant, title: \"APIs\" }, /* @__PURE__ */ React.createElement(\n      WarningPanel,\n      {\n        severity: \"error\",\n        title: \"Could not load APIs\",\n        message: /* @__PURE__ */ React.createElement(CodeSnippet, { text: `${error}`, language: \"text\" })\n      }\n    ));\n  }\n  return /* @__PURE__ */ React.createElement(\n    EntityTable,\n    {\n      title: \"APIs\",\n      variant,\n      emptyContent: /* @__PURE__ */ React.createElement(\"div\", { style: { textAlign: \"center\" } }, /* @__PURE__ */ React.createElement(Typography, { variant: \"body1\" }, \"This \", entity.kind.toLocaleLowerCase(\"en-US\"), \" does not contain any APIs.\"), /* @__PURE__ */ React.createElement(Typography, { variant: \"body2\" }, /* @__PURE__ */ React.createElement(Link, { to: \"https://backstage.io/docs/features/software-catalog/descriptor-format#kind-api\" }, \"Learn how to change this.\"))),\n      columns,\n      entities\n    }\n  );\n};\n\nconst ProvidedApisCard = (props) => {\n  const { variant = \"gridItem\", columns = apiEntityColumns } = props;\n  const { entity } = useEntity();\n  const { entities, loading, error } = useRelatedEntities(entity, {\n    type: RELATION_PROVIDES_API\n  });\n  if (loading) {\n    return /* @__PURE__ */ React.createElement(InfoCard, { variant, title: \"Provided APIs\" }, /* @__PURE__ */ React.createElement(Progress, null));\n  }\n  if (error || !entities) {\n    return /* @__PURE__ */ React.createElement(InfoCard, { variant, title: \"Provided APIs\" }, /* @__PURE__ */ React.createElement(\n      WarningPanel,\n      {\n        severity: \"error\",\n        title: \"Could not load APIs\",\n        message: /* @__PURE__ */ React.createElement(CodeSnippet, { text: `${error}`, language: \"text\" })\n      }\n    ));\n  }\n  return /* @__PURE__ */ React.createElement(\n    EntityTable,\n    {\n      title: \"Provided APIs\",\n      variant,\n      emptyContent: /* @__PURE__ */ React.createElement(\"div\", { style: { textAlign: \"center\" } }, /* @__PURE__ */ React.createElement(Typography, { variant: \"body1\" }, \"This \", entity.kind.toLocaleLowerCase(\"en-US\"), \" does not provide any APIs.\"), /* @__PURE__ */ React.createElement(Typography, { variant: \"body2\" }, /* @__PURE__ */ React.createElement(Link, { to: \"https://backstage.io/docs/features/software-catalog/descriptor-format#specprovidesapis-optional\" }, \"Learn how to change this.\"))),\n      columns,\n      entities\n    }\n  );\n};\n\nexport { ApiDefinitionDialog as A, ConsumedApisCard as C, HasApisCard as H, ProvidedApisCard as P };\n//# sourceMappingURL=ProvidedApisCard-DYM2U8N2.esm.js.map\n"],"names":["PlainApiDefinitionWidget","props","ApiTypeTitle","apiEntity","definition","type","useStyles","makeStyles","theme","TabPanel","children","value","index","other","classes","Box","a11yProps","ApiDefinitionDialog","_a","_b","_c","open","entity","onClose","activeTab","setActiveTab","definitionWidget","tabIndex","tabPanelIndex","Dialog","DialogTitle","Typography","DialogContent","Tabs","_","newValue","Tab","DialogActions","Button","createSpecApiTypeColumn","ApiDefinitionButton","dialogOpen","setDialogOpen","ToggleButton","Extension","createApiDefinitionColumn","apiEntityColumns","ConsumedApisCard","variant","columns","entities","loading","error","presetColumns","HasApisCard","ProvidedApisCard"],"sourceRoot":""}