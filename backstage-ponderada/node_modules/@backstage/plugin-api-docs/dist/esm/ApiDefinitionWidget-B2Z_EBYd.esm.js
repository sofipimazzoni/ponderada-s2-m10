import { createRouteRef, createExternalRouteRef, createApiRef } from '@backstage/core-plugin-api';
import React, { Suspense } from 'react';
import { Progress, CodeSnippet } from '@backstage/core-components';
import { useTheme } from '@material-ui/core/styles';

const rootRoute = createRouteRef({
  id: "api-docs"
});
const registerComponentRouteRef = createExternalRouteRef({
  id: "register-component",
  optional: true
});

const apiDocsConfigRef = createApiRef({
  id: "plugin.api-docs.config"
});

const LazyAsyncApiDefinition = React.lazy(
  () => import('./AsyncApiDefinition-BS46mwIR.esm.js').then((m) => ({
    default: m.AsyncApiDefinition
  }))
);
const AsyncApiDefinitionWidget = (props) => {
  return /* @__PURE__ */ React.createElement(Suspense, { fallback: /* @__PURE__ */ React.createElement(Progress, null) }, /* @__PURE__ */ React.createElement(LazyAsyncApiDefinition, { ...props }));
};

const LazyGraphQlDefinition = React.lazy(
  () => import('./GraphQlDefinition-D3sN0srb.esm.js').then((m) => ({
    default: m.GraphQlDefinition
  }))
);
const GraphQlDefinitionWidget = (props) => {
  return /* @__PURE__ */ React.createElement(Suspense, { fallback: /* @__PURE__ */ React.createElement(Progress, null) }, /* @__PURE__ */ React.createElement(LazyGraphQlDefinition, { ...props }));
};

const LazyOpenApiDefinition = React.lazy(
  () => import('./OpenApiDefinition-P9gI3GDo.esm.js').then((m) => ({
    default: m.OpenApiDefinition
  }))
);
const OpenApiDefinitionWidget = (props) => {
  var _a;
  const validSubmitMethods = (_a = props.supportedSubmitMethods) == null ? void 0 : _a.map(
    (method) => method.toLocaleLowerCase()
  );
  return /* @__PURE__ */ React.createElement(Suspense, { fallback: /* @__PURE__ */ React.createElement(Progress, null) }, /* @__PURE__ */ React.createElement(
    LazyOpenApiDefinition,
    {
      ...props,
      supportedSubmitMethods: validSubmitMethods
    }
  ));
};

const GrpcApiDefinitionWidget = (props) => {
  const theme = useTheme();
  return /* @__PURE__ */ React.createElement(
    CodeSnippet,
    {
      customStyle: { backgroundColor: theme.palette.background.default },
      text: props.definition,
      language: "protobuf",
      showCopyCodeButton: true
    }
  );
};

const TrpcApiDefinitionWidget = (props) => {
  const { definition } = props;
  const theme = useTheme();
  return /* @__PURE__ */ React.createElement(
    CodeSnippet,
    {
      customStyle: { backgroundColor: theme.palette.background.default },
      text: definition,
      language: "typescript",
      showCopyCodeButton: true
    }
  );
};

function defaultDefinitionWidgets() {
  return [
    {
      type: "openapi",
      title: "OpenAPI",
      rawLanguage: "yaml",
      component: (definition) => /* @__PURE__ */ React.createElement(OpenApiDefinitionWidget, { definition })
    },
    {
      type: "asyncapi",
      title: "AsyncAPI",
      rawLanguage: "yaml",
      component: (definition) => /* @__PURE__ */ React.createElement(AsyncApiDefinitionWidget, { definition })
    },
    {
      type: "graphql",
      title: "GraphQL",
      rawLanguage: "graphql",
      component: (definition) => /* @__PURE__ */ React.createElement(GraphQlDefinitionWidget, { definition })
    },
    {
      type: "grpc",
      title: "gRPC",
      component: (definition) => /* @__PURE__ */ React.createElement(GrpcApiDefinitionWidget, { definition })
    },
    {
      type: "trpc",
      title: "tRPC",
      component: (definition) => /* @__PURE__ */ React.createElement(TrpcApiDefinitionWidget, { definition })
    }
  ];
}

export { AsyncApiDefinitionWidget as A, GraphQlDefinitionWidget as G, OpenApiDefinitionWidget as O, TrpcApiDefinitionWidget as T, apiDocsConfigRef as a, registerComponentRouteRef as b, defaultDefinitionWidgets as d, rootRoute as r };
//# sourceMappingURL=ApiDefinitionWidget-B2Z_EBYd.esm.js.map
