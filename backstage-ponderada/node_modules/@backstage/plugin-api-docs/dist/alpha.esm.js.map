{"version":3,"file":"alpha.esm.js","sources":["../src/alpha.tsx"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport {\n  createApiExtension,\n  createApiFactory,\n  createNavItemExtension,\n  createPageExtension,\n  createPlugin,\n  createSchemaFromZod,\n} from '@backstage/frontend-plugin-api';\n\nimport {\n  compatWrapper,\n  convertLegacyRouteRef,\n} from '@backstage/core-compat-api';\n\nimport {\n  createEntityCardExtension,\n  createEntityContentExtension,\n} from '@backstage/plugin-catalog-react/alpha';\nimport {\n  ApiEntity,\n  parseEntityRef,\n  RELATION_HAS_PART,\n} from '@backstage/catalog-model';\n\nimport { defaultDefinitionWidgets } from './components/ApiDefinitionCard';\nimport { rootRoute, registerComponentRouteRef } from './routes';\nimport { apiDocsConfigRef } from './config';\nimport { AppIcon } from '@backstage/core-components';\n\nconst apiDocsNavItem = createNavItemExtension({\n  title: 'APIs',\n  routeRef: convertLegacyRouteRef(rootRoute),\n  icon: () => compatWrapper(<AppIcon id=\"kind:api\" />),\n});\n\nconst apiDocsConfigApi = createApiExtension({\n  factory: createApiFactory({\n    api: apiDocsConfigRef,\n    deps: {},\n    factory: () => {\n      const definitionWidgets = defaultDefinitionWidgets();\n      return {\n        getApiDefinitionWidget: (apiEntity: ApiEntity) => {\n          return definitionWidgets.find(d => d.type === apiEntity.spec.type);\n        },\n      };\n    },\n  }),\n});\n\nconst apiDocsExplorerPage = createPageExtension({\n  defaultPath: '/api-docs',\n  routeRef: convertLegacyRouteRef(rootRoute),\n  // Mapping DefaultApiExplorerPageProps to config\n  configSchema: createSchemaFromZod(z =>\n    z.object({\n      path: z.string().default('/api-docs'),\n      initiallySelectedFilter: z.enum(['owned', 'starred', 'all']).optional(),\n      // Ommiting columns and actions for now as their types are too complex to map to zod\n    }),\n  ),\n  loader: ({ config }) =>\n    import('./components/ApiExplorerPage').then(m =>\n      compatWrapper(\n        <m.ApiExplorerIndexPage\n          initiallySelectedFilter={config.initiallySelectedFilter}\n        />,\n      ),\n    ),\n});\n\nconst apiDocsHasApisEntityCard = createEntityCardExtension({\n  name: 'has-apis',\n  // Ommiting configSchema for now\n  // We are skipping variants and columns are too complex to map to zod\n  // See: https://github.com/backstage/backstage/pull/22619#discussion_r1477333252\n  filter: entity => {\n    return (\n      entity.kind === 'Component' &&\n      entity.relations?.some(\n        ({ type, targetRef }) =>\n          type.toLocaleLowerCase('en-US') === RELATION_HAS_PART &&\n          parseEntityRef(targetRef).kind === 'API',\n      )!!\n    );\n  },\n  loader: () =>\n    import('./components/ApisCards').then(m =>\n      compatWrapper(<m.HasApisCard />),\n    ),\n});\n\nconst apiDocsDefinitionEntityCard = createEntityCardExtension({\n  name: 'definition',\n  filter: 'kind:api',\n  loader: () =>\n    import('./components/ApiDefinitionCard').then(m =>\n      compatWrapper(<m.ApiDefinitionCard />),\n    ),\n});\n\nconst apiDocsConsumedApisEntityCard = createEntityCardExtension({\n  name: 'consumed-apis',\n  // Ommiting configSchema for now\n  // We are skipping variants and columns are too complex to map to zod\n  // See: https://github.com/backstage/backstage/pull/22619#discussion_r1477333252\n  filter: 'kind:component',\n  loader: () =>\n    import('./components/ApisCards').then(m =>\n      compatWrapper(<m.ConsumedApisCard />),\n    ),\n});\n\nconst apiDocsProvidedApisEntityCard = createEntityCardExtension({\n  name: 'provided-apis',\n  // Ommiting configSchema for now\n  // We are skipping variants and columns are too complex to map to zod\n  // See: https://github.com/backstage/backstage/pull/22619#discussion_r1477333252\n  filter: 'kind:component',\n  loader: () =>\n    import('./components/ApisCards').then(m =>\n      compatWrapper(<m.ProvidedApisCard />),\n    ),\n});\n\nconst apiDocsConsumingComponentsEntityCard = createEntityCardExtension({\n  name: 'consuming-components',\n  // Ommiting configSchema for now\n  // We are skipping variants\n  // See: https://github.com/backstage/backstage/pull/22619#discussion_r1477333252\n  filter: 'kind:api',\n  loader: () =>\n    import('./components/ComponentsCards').then(m =>\n      compatWrapper(<m.ConsumingComponentsCard />),\n    ),\n});\n\nconst apiDocsProvidingComponentsEntityCard = createEntityCardExtension({\n  name: 'providing-components',\n  // Ommiting configSchema for now\n  // We are skipping variants\n  // See: https://github.com/backstage/backstage/pull/22619#discussion_r1477333252\n  filter: 'kind:api',\n  loader: () =>\n    import('./components/ComponentsCards').then(m =>\n      compatWrapper(<m.ProvidingComponentsCard />),\n    ),\n});\n\nconst apiDocsDefinitionEntityContent = createEntityContentExtension({\n  name: 'definition',\n  defaultPath: '/defintion',\n  defaultTitle: 'Definition',\n  filter: 'kind:api',\n  loader: async () =>\n    import('./components/ApiDefinitionCard').then(m =>\n      compatWrapper(\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <m.ApiDefinitionCard />\n          </Grid>\n        </Grid>,\n      ),\n    ),\n});\n\nconst apiDocsApisEntityContent = createEntityContentExtension({\n  name: 'apis',\n  defaultPath: '/apis',\n  defaultTitle: 'APIs',\n  filter: 'kind:component',\n  loader: async () =>\n    import('./components/ApisCards').then(m =>\n      compatWrapper(\n        <Grid container spacing={3} alignItems=\"stretch\">\n          <Grid item xs={12}>\n            <m.ProvidedApisCard />\n          </Grid>\n          <Grid item xs={12}>\n            <m.ConsumedApisCard />\n          </Grid>\n        </Grid>,\n      ),\n    ),\n});\n\nexport default createPlugin({\n  id: 'api-docs',\n  routes: {\n    root: convertLegacyRouteRef(rootRoute),\n  },\n  externalRoutes: {\n    registerApi: convertLegacyRouteRef(registerComponentRouteRef),\n  },\n  extensions: [\n    apiDocsNavItem,\n    apiDocsConfigApi,\n    apiDocsExplorerPage,\n    apiDocsHasApisEntityCard,\n    apiDocsDefinitionEntityCard,\n    apiDocsProvidedApisEntityCard,\n    apiDocsConsumedApisEntityCard,\n    apiDocsConsumingComponentsEntityCard,\n    apiDocsProvidingComponentsEntityCard,\n    apiDocsDefinitionEntityContent,\n    apiDocsApisEntityContent,\n  ],\n});\n"],"names":[],"mappings":"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"}