import { compatWrapper, convertLegacyRouteRefs } from '@backstage/core-compat-api';
import { createPlugin } from '@backstage/frontend-plugin-api';
import React from 'react';
import { c as catalogIndexRouteRef } from './esm/routes-B-Sa5Rrg.esm.js';
import { createEntityCardExtension } from '@backstage/plugin-catalog-react/alpha';
import '@backstage/core-plugin-api';

const EntityGroupProfileCard = createEntityCardExtension({
  name: "group-profile",
  filter: "kind:group",
  loader: async () => import('./esm/GroupProfileCard-BlBaoRJ2.esm.js').then(
    (m) => compatWrapper(/* @__PURE__ */ React.createElement(m.GroupProfileCard, null))
  )
});
const EntityMembersListCard = createEntityCardExtension({
  name: "members-list",
  filter: "kind:group",
  loader: async () => import('./esm/MembersListCard-DB1VdRYu.esm.js').then(
    (m) => compatWrapper(/* @__PURE__ */ React.createElement(m.MembersListCard, null))
  )
});
const EntityOwnershipCard = createEntityCardExtension({
  name: "ownership",
  filter: "kind:group,user",
  loader: async () => import('./esm/OwnershipCard-DUaYCP-K.esm.js').then(
    (m) => compatWrapper(/* @__PURE__ */ React.createElement(m.OwnershipCard, null))
  )
});
const EntityUserProfileCard = createEntityCardExtension({
  name: "user-profile",
  filter: "kind:user",
  loader: async () => import('./esm/UserProfileCard-DDOjuS1z.esm.js').then(
    (m) => compatWrapper(/* @__PURE__ */ React.createElement(m.UserProfileCard, null))
  )
});
var alpha = createPlugin({
  id: "org",
  extensions: [
    EntityGroupProfileCard,
    EntityMembersListCard,
    EntityOwnershipCard,
    EntityUserProfileCard
  ],
  externalRoutes: convertLegacyRouteRefs({
    catalogIndex: catalogIndexRouteRef
  })
});

export { alpha as default };
//# sourceMappingURL=alpha.esm.js.map
