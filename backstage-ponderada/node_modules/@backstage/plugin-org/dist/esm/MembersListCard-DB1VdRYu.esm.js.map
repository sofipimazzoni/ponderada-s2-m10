{"version":3,"file":"MembersListCard-DB1VdRYu.esm.js","sources":["../../src/helpers/helpers.ts","../../src/components/Cards/Group/MembersList/MembersListCard.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CompoundEntityRef,\n  DEFAULT_NAMESPACE,\n  Entity,\n  GroupEntity,\n  RELATION_PARENT_OF,\n  stringifyEntityRef,\n  UserEntity,\n} from '@backstage/catalog-model';\nimport {\n  CatalogApi,\n  getEntityRelations,\n} from '@backstage/plugin-catalog-react';\n\nexport const getMembersFromGroups = async (\n  groups: CompoundEntityRef[],\n  catalogApi: CatalogApi,\n) => {\n  const membersList =\n    groups.length === 0\n      ? { items: [] }\n      : await catalogApi.getEntities({\n          filter: {\n            kind: 'User',\n            'relations.memberof': groups.map(group =>\n              stringifyEntityRef({\n                kind: 'group',\n                namespace: group.namespace.toLocaleLowerCase('en-US'),\n                name: group.name.toLocaleLowerCase('en-US'),\n              }),\n            ),\n          },\n        });\n\n  return membersList.items as UserEntity[];\n};\n\nexport const getDescendantGroupsFromGroup = async (\n  group: GroupEntity,\n  catalogApi: CatalogApi,\n) => {\n  const alreadyQueuedOrExpandedGroupNames = new Map<string, boolean>();\n  const groupRef: CompoundEntityRef = {\n    kind: group.kind,\n    namespace: group.metadata.namespace ?? DEFAULT_NAMESPACE,\n    name: group.metadata.name,\n  };\n\n  const groupQueue = [groupRef];\n  const resultantGroupRefs: CompoundEntityRef[] = [];\n\n  // Continue expanding groups until there are no more\n  while (groupQueue.length > 0) {\n    const activeGroupRef = groupQueue.shift() as CompoundEntityRef;\n    const activeGroup = await catalogApi.getEntityByRef(activeGroupRef);\n    alreadyQueuedOrExpandedGroupNames.set(\n      stringifyEntityRef(activeGroupRef),\n      true,\n    );\n\n    const childGroups = getEntityRelations(activeGroup, RELATION_PARENT_OF, {\n      kind: 'Group',\n    }).filter(\n      currentGroup =>\n        !alreadyQueuedOrExpandedGroupNames.has(\n          stringifyEntityRef(currentGroup),\n        ),\n    );\n    childGroups.forEach(childGroup =>\n      alreadyQueuedOrExpandedGroupNames.set(\n        stringifyEntityRef(childGroup),\n        true,\n      ),\n    );\n\n    groupQueue.push(...childGroups);\n    resultantGroupRefs.push(...childGroups);\n  }\n\n  return resultantGroupRefs;\n};\n\nexport const getAllDesendantMembersForGroupEntity = async (\n  groupEntity: GroupEntity,\n  catalogApi: CatalogApi,\n) =>\n  getMembersFromGroups(\n    await getDescendantGroupsFromGroup(groupEntity, catalogApi),\n    catalogApi,\n  );\n\nexport const removeDuplicateEntitiesFrom = (entityArray: Entity[]) => {\n  const seenEntities = new Map<string, boolean>();\n\n  return entityArray.filter(entity => {\n    const stringifiedEntity = stringifyEntityRef(entity);\n    const isDuplicate = seenEntities.has(stringifiedEntity);\n\n    seenEntities.set(stringifiedEntity, true);\n    return !isDuplicate;\n  });\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DEFAULT_NAMESPACE,\n  GroupEntity,\n  UserEntity,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport { catalogApiRef, useEntity } from '@backstage/plugin-catalog-react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\nimport React, { useState } from 'react';\nimport useAsync from 'react-use/esm/useAsync';\n\nimport {\n  Avatar,\n  InfoCard,\n  Progress,\n  ResponseErrorPanel,\n  Link,\n  OverflowTooltip,\n} from '@backstage/core-components';\nimport { useApi } from '@backstage/core-plugin-api';\nimport {\n  getAllDesendantMembersForGroupEntity,\n  removeDuplicateEntitiesFrom,\n} from '../../../../helpers/helpers';\nimport { EntityRefLink } from '@backstage/plugin-catalog-react';\nimport { EntityRelationAggregation } from '../../types';\n\nconst useStyles = makeStyles(\n  (theme: Theme) =>\n    createStyles({\n      card: {\n        border: `1px solid ${theme.palette.divider}`,\n        boxShadow: theme.shadows[2],\n        borderRadius: '4px',\n        overflow: 'visible',\n        position: 'relative',\n        margin: theme.spacing(4, 1, 1),\n        flex: '1',\n        minWidth: '0px',\n      },\n      avatar: {\n        position: 'absolute',\n        top: '-2rem',\n      },\n    }),\n  { name: 'MembersListCardComponent' },\n);\n\nconst MemberComponent = (props: { member: UserEntity }) => {\n  const classes = useStyles();\n  const {\n    metadata: { name: metaName, description },\n    spec: { profile },\n  } = props.member;\n  const displayName = profile?.displayName ?? metaName;\n\n  return (\n    <Box className={classes.card}>\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        m={3}\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Avatar\n          displayName={displayName}\n          picture={profile?.picture}\n          classes={classes}\n        />\n        <Box\n          pt={2}\n          sx={{\n            width: '100%',\n          }}\n          textAlign=\"center\"\n        >\n          <Typography variant=\"h6\">\n            <EntityRefLink\n              data-testid=\"user-link\"\n              entityRef={props.member}\n              title={displayName}\n            />\n          </Typography>\n          {profile?.email && (\n            <Link to={`mailto:${profile.email}`}>\n              <OverflowTooltip text={profile.email} />\n            </Link>\n          )}\n          {description && (\n            <Typography variant=\"subtitle2\">{description}</Typography>\n          )}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nconst useListStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n  },\n  cardContent: {\n    overflow: 'auto',\n  },\n  memberList: {\n    display: 'grid',\n    gap: theme.spacing(1.5),\n    gridTemplateColumns: `repeat(auto-fit, minmax(auto, ${theme.spacing(\n      34,\n    )}px))`,\n  },\n}));\n\n/** @public */\nexport const MembersListCard = (props: {\n  memberDisplayTitle?: string;\n  pageSize?: number;\n  showAggregateMembersToggle?: boolean;\n  relationsType?: EntityRelationAggregation;\n}) => {\n  const {\n    memberDisplayTitle = 'Members',\n    pageSize = 50,\n    showAggregateMembersToggle,\n    relationsType = 'direct',\n  } = props;\n  const classes = useListStyles();\n\n  const { entity: groupEntity } = useEntity<GroupEntity>();\n  const {\n    metadata: { name: groupName, namespace: grpNamespace },\n    spec: { profile },\n  } = groupEntity;\n  const catalogApi = useApi(catalogApiRef);\n\n  const displayName = profile?.displayName ?? groupName;\n\n  const groupNamespace = grpNamespace || DEFAULT_NAMESPACE;\n\n  const [page, setPage] = React.useState(1);\n  const pageChange = (_: React.ChangeEvent<unknown>, pageIndex: number) => {\n    setPage(pageIndex);\n  };\n\n  const [showAggregateMembers, setShowAggregateMembers] = useState(\n    relationsType === 'aggregated',\n  );\n\n  const { loading: loadingDescendantMembers, value: descendantMembers } =\n    useAsync(async () => {\n      if (!showAggregateMembers) {\n        return [] as UserEntity[];\n      }\n\n      return await getAllDesendantMembersForGroupEntity(\n        groupEntity,\n        catalogApi,\n      );\n    }, [catalogApi, groupEntity, showAggregateMembers]);\n  const {\n    loading,\n    error,\n    value: directMembers,\n  } = useAsync(async () => {\n    const membersList = await catalogApi.getEntities({\n      filter: {\n        kind: 'User',\n        'relations.memberof': [\n          stringifyEntityRef({\n            kind: 'group',\n            namespace: groupNamespace.toLocaleLowerCase('en-US'),\n            name: groupName.toLocaleLowerCase('en-US'),\n          }),\n        ],\n      },\n    });\n\n    return membersList.items as UserEntity[];\n  }, [catalogApi, groupEntity]);\n\n  const members = removeDuplicateEntitiesFrom(\n    [\n      ...(directMembers ?? []),\n      ...(descendantMembers && showAggregateMembers ? descendantMembers : []),\n    ].sort((a, b) =>\n      stringifyEntityRef(a).localeCompare(stringifyEntityRef(b)),\n    ),\n  ) as UserEntity[];\n\n  if (loading) {\n    return <Progress />;\n  } else if (error) {\n    return <ResponseErrorPanel error={error} />;\n  }\n\n  const nbPages = Math.ceil((members?.length || 0) / pageSize);\n  const paginationLabel = nbPages < 2 ? '' : `, page ${page} of ${nbPages}`;\n\n  const pagination = (\n    <Pagination\n      count={nbPages}\n      page={page}\n      onChange={pageChange}\n      showFirstButton\n      showLastButton\n    />\n  );\n\n  let memberList: React.JSX.Element;\n  if (members && members.length > 0) {\n    memberList = (\n      <Box className={classes.memberList}>\n        {members.slice(pageSize * (page - 1), pageSize * page).map(member => (\n          <MemberComponent member={member} key={stringifyEntityRef(member)} />\n        ))}\n      </Box>\n    );\n  } else {\n    memberList = (\n      <Box p={2}>\n        <Typography>\n          This group has no {memberDisplayTitle.toLocaleLowerCase()}.\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Grid item className={classes.root}>\n      <InfoCard\n        title={`${memberDisplayTitle} (${\n          members?.length || 0\n        }${paginationLabel})`}\n        subheader={`of ${displayName}`}\n        {...(nbPages <= 1 ? {} : { actions: pagination })}\n        className={classes.root}\n        cardClassName={classes.cardContent}\n      >\n        {showAggregateMembersToggle && (\n          <>\n            Direct Members\n            <Switch\n              color=\"primary\"\n              checked={showAggregateMembers}\n              onChange={() => {\n                setShowAggregateMembers(!showAggregateMembers);\n              }}\n              inputProps={{ 'aria-label': 'Users Type Switch' }}\n            />\n            Aggregated Members\n          </>\n        )}\n        {showAggregateMembers && loadingDescendantMembers ? (\n          <Progress />\n        ) : (\n          memberList\n        )}\n      </InfoCard>\n    </Grid>\n  );\n};\n"],"names":[],"mappings":"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"}