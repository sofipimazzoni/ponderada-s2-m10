{"version":3,"file":"alpha.esm.js","sources":["../src/alpha.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  compatWrapper,\n  convertLegacyRouteRefs,\n} from '@backstage/core-compat-api';\nimport { createPlugin } from '@backstage/frontend-plugin-api';\nimport React from 'react';\nimport { catalogIndexRouteRef } from './routes';\nimport { createEntityCardExtension } from '@backstage/plugin-catalog-react/alpha';\n\n/** @alpha */\nconst EntityGroupProfileCard = createEntityCardExtension({\n  name: 'group-profile',\n  filter: 'kind:group',\n  loader: async () =>\n    import('./components/Cards/Group/GroupProfile/GroupProfileCard').then(m =>\n      compatWrapper(<m.GroupProfileCard />),\n    ),\n});\n\n/** @alpha */\nconst EntityMembersListCard = createEntityCardExtension({\n  name: 'members-list',\n  filter: 'kind:group',\n  loader: async () =>\n    import('./components/Cards/Group/MembersList/MembersListCard').then(m =>\n      compatWrapper(<m.MembersListCard />),\n    ),\n});\n\n/** @alpha */\nconst EntityOwnershipCard = createEntityCardExtension({\n  name: 'ownership',\n  filter: 'kind:group,user',\n  loader: async () =>\n    import('./components/Cards/OwnershipCard/OwnershipCard').then(m =>\n      compatWrapper(<m.OwnershipCard />),\n    ),\n});\n\n/** @alpha */\nconst EntityUserProfileCard = createEntityCardExtension({\n  name: 'user-profile',\n  filter: 'kind:user',\n  loader: async () =>\n    import('./components/Cards/User/UserProfileCard/UserProfileCard').then(m =>\n      compatWrapper(<m.UserProfileCard />),\n    ),\n});\n\n/** @alpha */\nexport default createPlugin({\n  id: 'org',\n  extensions: [\n    EntityGroupProfileCard,\n    EntityMembersListCard,\n    EntityOwnershipCard,\n    EntityUserProfileCard,\n  ],\n  externalRoutes: convertLegacyRouteRefs({\n    catalogIndex: catalogIndexRouteRef,\n  }),\n});\n"],"names":[],"mappings":";;;;;;;AA0BA,MAAM,yBAAyB,yBAA0B,CAAA;AAAA,EACvD,IAAM,EAAA,eAAA;AAAA,EACN,MAAQ,EAAA,YAAA;AAAA,EACR,MAAQ,EAAA,YACN,OAAO,wCAAwD,CAAE,CAAA,IAAA;AAAA,IAAK,OACpE,aAAc,iBAAA,KAAA,CAAA,aAAA,CAAC,CAAE,CAAA,gBAAA,EAAF,IAAmB,CAAE,CAAA;AAAA,GACtC;AACJ,CAAC,CAAA,CAAA;AAGD,MAAM,wBAAwB,yBAA0B,CAAA;AAAA,EACtD,IAAM,EAAA,cAAA;AAAA,EACN,MAAQ,EAAA,YAAA;AAAA,EACR,MAAQ,EAAA,YACN,OAAO,uCAAsD,CAAE,CAAA,IAAA;AAAA,IAAK,OAClE,aAAc,iBAAA,KAAA,CAAA,aAAA,CAAC,CAAE,CAAA,eAAA,EAAF,IAAkB,CAAE,CAAA;AAAA,GACrC;AACJ,CAAC,CAAA,CAAA;AAGD,MAAM,sBAAsB,yBAA0B,CAAA;AAAA,EACpD,IAAM,EAAA,WAAA;AAAA,EACN,MAAQ,EAAA,iBAAA;AAAA,EACR,MAAQ,EAAA,YACN,OAAO,qCAAgD,CAAE,CAAA,IAAA;AAAA,IAAK,OAC5D,aAAc,iBAAA,KAAA,CAAA,aAAA,CAAC,CAAE,CAAA,aAAA,EAAF,IAAgB,CAAE,CAAA;AAAA,GACnC;AACJ,CAAC,CAAA,CAAA;AAGD,MAAM,wBAAwB,yBAA0B,CAAA;AAAA,EACtD,IAAM,EAAA,cAAA;AAAA,EACN,MAAQ,EAAA,WAAA;AAAA,EACR,MAAQ,EAAA,YACN,OAAO,uCAAyD,CAAE,CAAA,IAAA;AAAA,IAAK,OACrE,aAAc,iBAAA,KAAA,CAAA,aAAA,CAAC,CAAE,CAAA,eAAA,EAAF,IAAkB,CAAE,CAAA;AAAA,GACrC;AACJ,CAAC,CAAA,CAAA;AAGD,YAAe,YAAa,CAAA;AAAA,EAC1B,EAAI,EAAA,KAAA;AAAA,EACJ,UAAY,EAAA;AAAA,IACV,sBAAA;AAAA,IACA,qBAAA;AAAA,IACA,mBAAA;AAAA,IACA,qBAAA;AAAA,GACF;AAAA,EACA,gBAAgB,sBAAuB,CAAA;AAAA,IACrC,YAAc,EAAA,oBAAA;AAAA,GACf,CAAA;AACH,CAAC,CAAA;;;;"}