import { c as catalogGraphRouteRef, a as catalogEntityRouteRef } from './esm/routes-B7pnW8AZ.esm.js';
export { A as ALL_RELATION_PAIRS, D as Direction, E as EntityRelationsGraph } from './esm/routes-B7pnW8AZ.esm.js';
import { createPlugin, createComponentExtension, createRoutableExtension } from '@backstage/core-plugin-api';
import '@backstage/catalog-model';
import '@backstage/core-components';
import '@material-ui/core/CircularProgress';
import '@material-ui/core/styles';
import 'classnames';
import 'react';
import '@material-ui/core/styles/makeStyles';
import '@backstage/plugin-catalog-react';
import '@material-ui/core/SvgIcon';
import 'react-use/esm/useDebounce';
import 'react-use/esm/useAsyncFn';

const catalogGraphPlugin = createPlugin({
  id: "catalog-graph",
  routes: {
    catalogGraph: catalogGraphRouteRef
  },
  externalRoutes: {
    catalogEntity: catalogEntityRouteRef
  }
});

const EntityCatalogGraphCard = catalogGraphPlugin.provide(
  createComponentExtension({
    name: "EntityCatalogGraphCard",
    component: {
      lazy: () => import('./esm/index-Dy8_Ufah.esm.js').then((m) => m.CatalogGraphCard)
    }
  })
);
const CatalogGraphPage = catalogGraphPlugin.provide(
  createRoutableExtension({
    name: "CatalogGraphPage",
    component: () => import('./esm/index-CyVoUbSq.esm.js').then((m) => m.CatalogGraphPage),
    mountPoint: catalogGraphRouteRef
  })
);

export { CatalogGraphPage, EntityCatalogGraphCard, catalogGraphPlugin, catalogGraphRouteRef };
//# sourceMappingURL=index.esm.js.map
