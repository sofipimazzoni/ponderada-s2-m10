{"version":3,"file":"index.cjs.js","sources":["../src/actions/helpers.ts","../src/actions/bitbucketCloud.examples.ts","../src/actions/bitbucketCloud.ts","../src/actions/bitbucketCloudPipelinesRun.examples.ts","../src/actions/inputProperties.ts","../src/actions/bitbucketCloudPipelinesRun.ts","../src/module.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const getAuthorizationHeader = (config: {\n  username?: string;\n  appPassword?: string;\n  token?: string;\n}) => {\n  if (config.username && config.appPassword) {\n    const buffer = Buffer.from(\n      `${config.username}:${config.appPassword}`,\n      'utf8',\n    );\n\n    return `Basic ${buffer.toString('base64')}`;\n  }\n\n  if (config.token) {\n    return `Bearer ${config.token}`;\n  }\n\n  throw new Error(\n    `Authorization has not been provided for Bitbucket Cloud. Please add either username + appPassword to the Integrations config or a user login auth token`,\n  );\n};\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description:\n      'Initializes a git repository with the content in the workspace, and publishes it to Bitbucket Cloud with the default configuration.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:bitbucketCloud',\n          name: 'Publish to Bitbucket Cloud',\n          input: {\n            repoUrl:\n              'bitbucket.org?repo=repo&workspace=workspace&project=project',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Initializes a Bitbucket Cloud repository with a description.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:bitbucketCloud',\n          name: 'Publish to Bitbucket Cloud',\n          input: {\n            repoUrl:\n              'bitbucket.org?repo=repo&workspace=workspace&project=project',\n            description: 'Initialize a git repository',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initializes a Bitbucket Cloud repository with public repo visibility, if not set defaults to private',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:bitbucketCloud',\n          name: 'Publish to Bitbucket Cloud',\n          input: {\n            repoUrl:\n              'bitbucket.org?repo=repo&workspace=workspace&project=project',\n            repoVisibility: 'public',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initializes a Bitbucket Cloud repository with a default Branch, if not set defaults to master',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:bitbucketCloud',\n          name: 'Publish to Bitbucket Cloud',\n          input: {\n            repoUrl:\n              'bitbucket.org?repo=repo&workspace=workspace&project=project',\n            defaultBranch: 'main',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Path within the workspace that will be used as the repository root. If omitted, the entire workspace will be published as the repository',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:bitbucketCloud',\n          name: 'Publish to Bitbucket Cloud',\n          input: {\n            repoUrl:\n              'bitbucket.org?repo=repo&workspace=workspace&project=project',\n            sourcePath: './repoRoot',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initializes a Bitbucket Cloud repository with a custom authentication token',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:bitbucketCloud',\n          name: 'Publish to Bitbucket Cloud',\n          input: {\n            repoUrl:\n              'bitbucket.org?repo=repo&workspace=workspace&project=project',\n            token: 'your-custom-auth-token',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initializes a Bitbucket Cloud repository with all proporties being set',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:bitbucketCloud',\n          name: 'Publish to Bitbucket Cloud',\n          input: {\n            repoUrl:\n              'bitbucket.org?repo=repo&workspace=workspace&project=project',\n            description: 'Initialize a git repository',\n            repoVisibility: 'public',\n            defaultBranch: 'main',\n            token: 'your-custom-auth-token',\n          },\n        },\n      ],\n    }),\n  },\n];\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InputError } from '@backstage/errors';\nimport { ScmIntegrationRegistry } from '@backstage/integration';\nimport {\n  createTemplateAction,\n  initRepoAndPush,\n  getRepoSourceDirectory,\n  parseRepoUrl,\n} from '@backstage/plugin-scaffolder-node';\nimport fetch, { Response, RequestInit } from 'node-fetch';\n\nimport { Config } from '@backstage/config';\nimport { getAuthorizationHeader } from './helpers';\nimport { examples } from './bitbucketCloud.examples';\n\nconst createRepository = async (opts: {\n  workspace: string;\n  project: string;\n  repo: string;\n  description?: string;\n  repoVisibility: 'private' | 'public';\n  mainBranch: string;\n  authorization: string;\n  apiBaseUrl: string;\n}) => {\n  const {\n    workspace,\n    project,\n    repo,\n    description,\n    repoVisibility,\n    mainBranch,\n    authorization,\n    apiBaseUrl,\n  } = opts;\n\n  const options: RequestInit = {\n    method: 'POST',\n    body: JSON.stringify({\n      scm: 'git',\n      description: description,\n      is_private: repoVisibility === 'private',\n      project: { key: project },\n    }),\n    headers: {\n      Authorization: authorization,\n      'Content-Type': 'application/json',\n    },\n  };\n\n  let response: Response;\n  try {\n    response = await fetch(\n      `${apiBaseUrl}/repositories/${workspace}/${repo}`,\n      options,\n    );\n  } catch (e) {\n    throw new Error(`Unable to create repository, ${e}`);\n  }\n\n  if (response.status !== 200) {\n    throw new Error(\n      `Unable to create repository, ${response.status} ${\n        response.statusText\n      }, ${await response.text()}`,\n    );\n  }\n\n  const r = await response.json();\n  let remoteUrl = '';\n  for (const link of r.links.clone) {\n    if (link.name === 'https') {\n      remoteUrl = link.href;\n    }\n  }\n\n  // \"mainbranch.name\" cannot be set neither at create nor update of the repo\n  // the first pushed branch will be set as \"main branch\" then\n  const repoContentsUrl = `${r.links.html.href}/src/${mainBranch}`;\n  return { remoteUrl, repoContentsUrl };\n};\n\n/**\n * Creates a new action that initializes a git repository of the content in the workspace\n * and publishes it to Bitbucket Cloud.\n * @public\n */\nexport function createPublishBitbucketCloudAction(options: {\n  integrations: ScmIntegrationRegistry;\n  config: Config;\n}) {\n  const { integrations, config } = options;\n\n  return createTemplateAction<{\n    repoUrl: string;\n    description?: string;\n    defaultBranch?: string;\n    repoVisibility?: 'private' | 'public';\n    sourcePath?: string;\n    token?: string;\n  }>({\n    id: 'publish:bitbucketCloud',\n    examples,\n    description:\n      'Initializes a git repository of the content in the workspace, and publishes it to Bitbucket Cloud.',\n    schema: {\n      input: {\n        type: 'object',\n        required: ['repoUrl'],\n        properties: {\n          repoUrl: {\n            title: 'Repository Location',\n            type: 'string',\n          },\n          description: {\n            title: 'Repository Description',\n            type: 'string',\n          },\n          repoVisibility: {\n            title: 'Repository Visibility',\n            type: 'string',\n            enum: ['private', 'public'],\n          },\n          defaultBranch: {\n            title: 'Default Branch',\n            type: 'string',\n            description: `Sets the default branch on the repository. The default value is 'master'`,\n          },\n          sourcePath: {\n            title: 'Source Path',\n            description:\n              'Path within the workspace that will be used as the repository root. If omitted, the entire workspace will be published as the repository.',\n            type: 'string',\n          },\n          token: {\n            title: 'Authentication Token',\n            type: 'string',\n            description:\n              'The token to use for authorization to BitBucket Cloud',\n          },\n        },\n      },\n      output: {\n        type: 'object',\n        properties: {\n          remoteUrl: {\n            title: 'A URL to the repository with the provider',\n            type: 'string',\n          },\n          repoContentsUrl: {\n            title: 'A URL to the root of the repository',\n            type: 'string',\n          },\n          commitHash: {\n            title: 'The git commit hash of the initial commit',\n            type: 'string',\n          },\n        },\n      },\n    },\n    async handler(ctx) {\n      const {\n        repoUrl,\n        description,\n        defaultBranch = 'master',\n        repoVisibility = 'private',\n      } = ctx.input;\n\n      const { workspace, project, repo, host } = parseRepoUrl(\n        repoUrl,\n        integrations,\n      );\n\n      if (!workspace) {\n        throw new InputError(\n          `Invalid URL provider was included in the repo URL to create ${ctx.input.repoUrl}, missing workspace`,\n        );\n      }\n\n      if (!project) {\n        throw new InputError(\n          `Invalid URL provider was included in the repo URL to create ${ctx.input.repoUrl}, missing project`,\n        );\n      }\n\n      const integrationConfig = integrations.bitbucketCloud.byHost(host);\n      if (!integrationConfig) {\n        throw new InputError(\n          `No matching integration configuration for host ${host}, please check your integrations config`,\n        );\n      }\n\n      const authorization = getAuthorizationHeader(\n        ctx.input.token ? { token: ctx.input.token } : integrationConfig.config,\n      );\n\n      const apiBaseUrl = integrationConfig.config.apiBaseUrl;\n\n      const { remoteUrl, repoContentsUrl } = await createRepository({\n        authorization,\n        workspace: workspace || '',\n        project,\n        repo,\n        repoVisibility,\n        mainBranch: defaultBranch,\n        description,\n        apiBaseUrl,\n      });\n\n      const gitAuthorInfo = {\n        name: config.getOptionalString('scaffolder.defaultAuthor.name'),\n        email: config.getOptionalString('scaffolder.defaultAuthor.email'),\n      };\n\n      let auth;\n\n      if (ctx.input.token) {\n        auth = {\n          username: 'x-token-auth',\n          password: ctx.input.token,\n        };\n      } else {\n        if (\n          !integrationConfig.config.username ||\n          !integrationConfig.config.appPassword\n        ) {\n          throw new Error(\n            'Credentials for Bitbucket Cloud integration required for this action.',\n          );\n        }\n\n        auth = {\n          username: integrationConfig.config.username,\n          password: integrationConfig.config.appPassword,\n        };\n      }\n\n      const commitResult = await initRepoAndPush({\n        dir: getRepoSourceDirectory(ctx.workspacePath, ctx.input.sourcePath),\n        remoteUrl,\n        auth,\n        defaultBranch,\n        logger: ctx.logger,\n        commitMessage: config.getOptionalString(\n          'scaffolder.defaultCommitMessage',\n        ),\n        gitAuthorInfo,\n      });\n\n      ctx.output('commitHash', commitResult?.commitHash);\n      ctx.output('remoteUrl', remoteUrl);\n      ctx.output('repoContentsUrl', repoContentsUrl);\n    },\n  });\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description: 'Trigger a pipeline for a branch',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'bitbucket:pipelines:run',\n          id: 'run-bitbucket-pipeline',\n          name: 'Run an example bitbucket pipeline',\n          input: {\n            workspace: 'test-workspace',\n            repo_slug: 'test-repo-slug',\n            body: {\n              target: {\n                ref_type: 'branch',\n                type: 'pipeline_ref_target',\n                ref_name: 'master',\n              },\n            },\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Trigger a pipeline for a commit on a branch',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'bitbucket:pipelines:run',\n          id: 'run-bitbucket-pipeline',\n          name: 'Run an example bitbucket pipeline',\n          input: {\n            workspace: 'test-workspace',\n            repo_slug: 'test-repo-slug',\n            body: {\n              target: {\n                commit: {\n                  type: 'commit',\n                  hash: 'ce5b7431602f7cbba007062eeb55225c6e18e956',\n                },\n                ref_type: 'branch',\n                type: 'pipeline_ref_target',\n                ref_name: 'master',\n              },\n            },\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Trigger a specific pipeline definition for a commit',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'bitbucket:pipelines:run',\n          id: 'run-bitbucket-pipeline',\n          name: 'Run an example bitbucket pipeline',\n          input: {\n            workspace: 'test-workspace',\n            repo_slug: 'test-repo-slug',\n            body: {\n              target: {\n                commit: {\n                  type: 'commit',\n                  hash: 'a3c4e02c9a3755eccdc3764e6ea13facdf30f923',\n                },\n                selector: {\n                  type: 'custom',\n                  pattern: 'Deploy to production',\n                },\n                type: 'pipeline_commit_target',\n              },\n            },\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Trigger a specific pipeline definition for a commit on a branch or tag',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'bitbucket:pipelines:run',\n          id: 'run-bitbucket-pipeline',\n          name: 'Run an example bitbucket pipeline',\n          input: {\n            workspace: 'test-workspace',\n            repo_slug: 'test-repo-slug',\n            body: {\n              target: {\n                commit: {\n                  type: 'commit',\n                  hash: 'a3c4e02c9a3755eccdc3764e6ea13facdf30f923',\n                },\n                selector: {\n                  type: 'custom',\n                  pattern: 'Deploy to production',\n                },\n                type: 'pipeline_ref_target',\n                ref_name: 'master',\n                ref_type: 'branch',\n              },\n            },\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Trigger a custom pipeline with variables',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'bitbucket:pipelines:run',\n          id: 'run-bitbucket-pipeline',\n          name: 'Run an example bitbucket pipeline',\n          input: {\n            workspace: 'test-workspace',\n            repo_slug: 'test-repo-slug',\n            body: {\n              target: {\n                type: 'pipeline_ref_target',\n                ref_name: 'master',\n                ref_type: 'branch',\n                selector: {\n                  type: 'custom',\n                  pattern: 'Deploy to production',\n                },\n              },\n              variables: [\n                { key: 'var1key', value: 'var1value', secured: true },\n                {\n                  key: 'var2key',\n                  value: 'var2value',\n                },\n              ],\n            },\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Trigger a pull request pipeline',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'bitbucket:pipelines:run',\n          id: 'run-bitbucket-pipeline',\n          name: 'Run an example bitbucket pipeline',\n          input: {\n            workspace: 'test-workspace',\n            repo_slug: 'test-repo-slug',\n            body: {\n              target: {\n                type: 'pipeline_pullrequest_target',\n                source: 'pull-request-branch',\n                destination: 'master',\n                destination_commit: {\n                  hash: '9f848b7',\n                },\n                commit: {\n                  hash: '1a372fc',\n                },\n                pull_request: {\n                  id: '3',\n                },\n                selector: {\n                  type: 'pull-requests',\n                  pattern: '**',\n                },\n              },\n            },\n          },\n        },\n      ],\n    }),\n  },\n];\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst workspace = {\n  title: 'Workspace',\n  description: `The workspace name`,\n  type: 'string',\n};\n\nconst repo_slug = {\n  title: 'Repository name',\n  description: 'The repository name',\n  type: 'string',\n};\n\nconst ref_type = {\n  title: 'ref_type',\n  type: 'string',\n};\n\nconst type = {\n  title: 'type',\n  type: 'string',\n};\n\nconst ref_name = {\n  title: 'ref_name',\n  type: 'string',\n};\nconst source = {\n  title: 'source',\n  type: 'string',\n};\nconst destination = {\n  title: 'destination',\n  type: 'string',\n};\nconst hash = {\n  title: 'hash',\n  type: 'string',\n};\n\nconst pattern = {\n  title: 'pattern',\n  type: 'string',\n};\n\nconst id = {\n  title: 'id',\n  type: 'string',\n};\n\nconst key = {\n  title: 'key',\n  type: 'string',\n};\nconst value = {\n  title: 'value',\n  type: 'string',\n};\nconst secured = {\n  title: 'secured',\n  type: 'boolean',\n};\n\nconst token = {\n  title: 'Authentication Token',\n  type: 'string',\n  description: 'The token to use for authorization to BitBucket Cloud',\n};\n\nconst destination_commit = {\n  title: 'destination_commit',\n  type: 'object',\n  properties: {\n    hash,\n  },\n};\n\nconst commit = {\n  title: 'commit',\n  type: 'object',\n  properties: {\n    type,\n    hash,\n  },\n};\n\nconst selector = {\n  title: 'selector',\n  type: 'object',\n  properties: {\n    type,\n    pattern,\n  },\n};\n\nconst pull_request = {\n  title: 'pull_request',\n  type: 'object',\n  properties: {\n    id,\n  },\n};\n\nconst pipelinesRunBody = {\n  title: 'Request Body',\n  description:\n    'Request body properties: see Bitbucket Cloud Rest API documentation for more details',\n  type: 'object',\n  properties: {\n    target: {\n      title: 'target',\n      type: 'object',\n      properties: {\n        ref_type,\n        type,\n        ref_name,\n        source,\n        destination,\n        destination_commit,\n        commit,\n        selector,\n        pull_request,\n      },\n    },\n    variables: {\n      title: 'variables',\n      type: 'array',\n      items: {\n        type: 'object',\n        properties: {\n          key,\n          value,\n          secured,\n        },\n      },\n    },\n  },\n};\n\nexport { workspace, repo_slug, pipelinesRunBody, token };\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { examples } from './bitbucketCloudPipelinesRun.examples';\nimport { createTemplateAction } from '@backstage/plugin-scaffolder-node';\nimport fetch, { Response } from 'node-fetch';\nimport * as inputProps from './inputProperties';\nimport { ScmIntegrationRegistry } from '@backstage/integration';\nimport { getAuthorizationHeader } from './helpers';\n\nconst id = 'bitbucket:pipelines:run';\n/**\n * Creates a new action that triggers a run of a bitbucket pipeline\n *\n * @public\n */\nexport const createBitbucketPipelinesRunAction = (options: {\n  integrations: ScmIntegrationRegistry;\n}) => {\n  const { integrations } = options;\n  return createTemplateAction<{\n    workspace: string;\n    repo_slug: string;\n    body?: object;\n    token?: string;\n  }>({\n    id,\n    description: 'Run a bitbucket cloud pipeline',\n    examples,\n    schema: {\n      input: {\n        type: 'object',\n        required: ['workspace', 'repo_slug'],\n        properties: {\n          workspace: inputProps.workspace,\n          repo_slug: inputProps.repo_slug,\n          body: inputProps.pipelinesRunBody,\n          token: inputProps.token,\n        },\n      },\n      output: {\n        type: 'object',\n        properties: {\n          buildNumber: {\n            title: 'Build number',\n            type: 'number',\n          },\n          repoUrl: {\n            title: 'A URL to the pipeline repositry',\n            type: 'string',\n          },\n          repoContentsUrl: {\n            title: 'A URL to the pipeline',\n            type: 'string',\n          },\n        },\n      },\n    },\n    supportsDryRun: false,\n    async handler(ctx) {\n      const { workspace, repo_slug, body, token } = ctx.input;\n      const host = 'bitbucket.org';\n      const integrationConfig = integrations.bitbucketCloud.byHost(host);\n\n      const authorization = getAuthorizationHeader(\n        token ? { token } : integrationConfig!.config,\n      );\n      let response: Response;\n      try {\n        response = await fetch(\n          `https://api.bitbucket.org/2.0/repositories/${workspace}/${repo_slug}/pipelines`,\n          {\n            method: 'POST',\n            headers: {\n              Authorization: authorization,\n              Accept: 'application/json',\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body) ?? {},\n          },\n        );\n      } catch (e) {\n        throw new Error(`Unable to run pipeline, ${e}`);\n      }\n\n      if (response.status !== 201) {\n        throw new Error(\n          `Unable to run pipeline, ${response.status} ${\n            response.statusText\n          }, ${await response.text()}`,\n        );\n      }\n\n      const responseObject = await response.json();\n\n      ctx.output('buildNumber', responseObject.build_number);\n      ctx.output('repoUrl', responseObject.repository.links.html.href);\n      ctx.output(\n        'pipelinesUrl',\n        `${responseObject.repository.links.html.href}/pipelines`,\n      );\n    },\n  });\n};\n","/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  coreServices,\n  createBackendModule,\n} from '@backstage/backend-plugin-api';\nimport { scaffolderActionsExtensionPoint } from '@backstage/plugin-scaffolder-node/alpha';\nimport {\n  createBitbucketPipelinesRunAction,\n  createPublishBitbucketCloudAction,\n} from './actions';\nimport { ScmIntegrations } from '@backstage/integration';\n\n/**\n * @public\n * The Bitbucket Cloud Module for the Scaffolder Backend\n */\nexport const bitbucketCloudModule = createBackendModule({\n  moduleId: 'bitbucketCloud',\n  pluginId: 'scaffolder',\n  register({ registerInit }) {\n    registerInit({\n      deps: {\n        scaffolder: scaffolderActionsExtensionPoint,\n        config: coreServices.rootConfig,\n      },\n      async init({ scaffolder, config }) {\n        const integrations = ScmIntegrations.fromConfig(config);\n\n        scaffolder.addActions(\n          createPublishBitbucketCloudAction({ integrations, config }),\n          createBitbucketPipelinesRunAction({ integrations }),\n        );\n      },\n    });\n  },\n});\n"],"names":["examples","yaml","fetch","createTemplateAction","parseRepoUrl","InputError","initRepoAndPush","getRepoSourceDirectory","id","inputProps.workspace","inputProps.repo_slug","inputProps.pipelinesRunBody","inputProps.token","createBackendModule","scaffolderActionsExtensionPoint","coreServices","ScmIntegrations"],"mappings":"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"}