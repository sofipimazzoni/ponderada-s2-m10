{"version":3,"file":"alpha.cjs.js","sources":["../src/alpha.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  coreServices,\n  createBackendPlugin,\n} from '@backstage/backend-plugin-api';\nimport {\n  LunrSearchEngine,\n  RegisterCollatorParameters,\n  RegisterDecoratorParameters,\n  SearchEngine,\n} from '@backstage/plugin-search-backend-node';\nimport {\n  SearchEngineRegistryExtensionPoint,\n  searchEngineRegistryExtensionPoint,\n  searchIndexRegistryExtensionPoint,\n  SearchIndexRegistryExtensionPoint,\n  searchIndexServiceRef,\n} from '@backstage/plugin-search-backend-node/alpha';\n\nimport { createRouter } from './service/router';\n\nclass SearchIndexRegistry implements SearchIndexRegistryExtensionPoint {\n  private collators: RegisterCollatorParameters[] = [];\n  private decorators: RegisterDecoratorParameters[] = [];\n\n  public addCollator(options: RegisterCollatorParameters): void {\n    this.collators.push(options);\n  }\n\n  public addDecorator(options: RegisterDecoratorParameters): void {\n    this.decorators.push(options);\n  }\n\n  public getCollators(): RegisterCollatorParameters[] {\n    return this.collators;\n  }\n\n  public getDecorators(): RegisterDecoratorParameters[] {\n    return this.decorators;\n  }\n}\n\nclass SearchEngineRegistry implements SearchEngineRegistryExtensionPoint {\n  private searchEngine: SearchEngine | null = null;\n\n  public setSearchEngine(searchEngine: SearchEngine): void {\n    if (this.searchEngine) {\n      throw new Error('Multiple Search engines is not supported at this time');\n    }\n    this.searchEngine = searchEngine;\n  }\n\n  public getSearchEngine(): SearchEngine | null {\n    return this.searchEngine;\n  }\n}\n\n/**\n * The Search plugin is responsible for starting search indexing processes and return search results.\n * @alpha\n */\nexport default createBackendPlugin({\n  pluginId: 'search',\n  register(env) {\n    const searchIndexRegistry = new SearchIndexRegistry();\n    env.registerExtensionPoint(\n      searchIndexRegistryExtensionPoint,\n      searchIndexRegistry,\n    );\n\n    const searchEngineRegistry = new SearchEngineRegistry();\n    env.registerExtensionPoint(\n      searchEngineRegistryExtensionPoint,\n      searchEngineRegistry,\n    );\n\n    env.registerInit({\n      deps: {\n        logger: coreServices.logger,\n        config: coreServices.rootConfig,\n        discovery: coreServices.discovery,\n        permissions: coreServices.permissions,\n        auth: coreServices.auth,\n        http: coreServices.httpRouter,\n        httpAuth: coreServices.httpAuth,\n        searchIndexService: searchIndexServiceRef,\n      },\n      async init({\n        config,\n        logger,\n        discovery,\n        permissions,\n        auth,\n        http,\n        httpAuth,\n        searchIndexService,\n      }) {\n        let searchEngine = searchEngineRegistry.getSearchEngine();\n        if (!searchEngine) {\n          searchEngine = new LunrSearchEngine({\n            logger,\n          });\n        }\n\n        const collators = searchIndexRegistry.getCollators();\n        const decorators = searchIndexRegistry.getDecorators();\n\n        await searchIndexService.start({\n          searchEngine,\n          collators,\n          decorators,\n        });\n\n        const router = await createRouter({\n          config,\n          discovery,\n          permissions,\n          auth,\n          httpAuth,\n          logger,\n          engine: searchEngine,\n          types: searchIndexService.getDocumentTypes(),\n        });\n\n        http.use(router);\n      },\n    });\n  },\n});\n"],"names":["createBackendPlugin","searchIndexRegistryExtensionPoint","searchEngineRegistryExtensionPoint","coreServices","searchIndexServiceRef","LunrSearchEngine","router","createRouter"],"mappings":"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"}