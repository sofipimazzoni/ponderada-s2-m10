{"version":3,"file":"index.cjs.js","sources":["../src/policy.ts","../src/module.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BackstageIdentityResponse } from '@backstage/plugin-auth-node';\nimport {\n  AuthorizeResult,\n  PolicyDecision,\n} from '@backstage/plugin-permission-common';\nimport {\n  PermissionPolicy,\n  PolicyQuery,\n} from '@backstage/plugin-permission-node';\n\nexport class AllowAllPermissionPolicy implements PermissionPolicy {\n  async handle(\n    _request: PolicyQuery,\n    _user?: BackstageIdentityResponse,\n  ): Promise<PolicyDecision> {\n    return {\n      result: AuthorizeResult.ALLOW,\n    };\n  }\n}\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createBackendModule } from '@backstage/backend-plugin-api';\nimport { policyExtensionPoint } from '@backstage/plugin-permission-node/alpha';\nimport { AllowAllPermissionPolicy } from './policy';\n\n/**\n * A permission policy module that allows all requests.\n *\n * @public\n */\nexport const permissionModuleAllowAllPolicy = createBackendModule({\n  pluginId: 'permission',\n  moduleId: 'allow-all-policy',\n  register(reg) {\n    reg.registerInit({\n      deps: { policy: policyExtensionPoint },\n      async init({ policy }) {\n        policy.setPolicy(new AllowAllPermissionPolicy());\n      },\n    });\n  },\n});\n"],"names":["AuthorizeResult","createBackendModule","policyExtensionPoint"],"mappings":";;;;;;;;AA0BO,MAAM,wBAAqD,CAAA;AAAA,EAChE,MAAM,MACJ,CAAA,QAAA,EACA,KACyB,EAAA;AACzB,IAAO,OAAA;AAAA,MACL,QAAQA,sCAAgB,CAAA,KAAA;AAAA,KAC1B,CAAA;AAAA,GACF;AACF;;ACXO,MAAM,iCAAiCC,oCAAoB,CAAA;AAAA,EAChE,QAAU,EAAA,YAAA;AAAA,EACV,QAAU,EAAA,kBAAA;AAAA,EACV,SAAS,GAAK,EAAA;AACZ,IAAA,GAAA,CAAI,YAAa,CAAA;AAAA,MACf,IAAA,EAAM,EAAE,MAAA,EAAQC,0BAAqB,EAAA;AAAA,MACrC,MAAM,IAAA,CAAK,EAAE,MAAA,EAAU,EAAA;AACrB,QAAO,MAAA,CAAA,SAAA,CAAU,IAAI,wBAAA,EAA0B,CAAA,CAAA;AAAA,OACjD;AAAA,KACD,CAAA,CAAA;AAAA,GACH;AACF,CAAC;;;;"}