import React from 'react';
import { useOutlet } from 'react-router-dom';
import { PageWithHeader, Content, ContentHeader, CreateButton, SupportButton } from '@backstage/core-components';
import { useApi, configApiRef, useRouteRef } from '@backstage/core-plugin-api';
import { EntityListProvider, CatalogFilterLayout, DefaultFilters } from '@backstage/plugin-catalog-react';
import { c as createComponentRouteRef } from './routes-D5H5grpG.esm.js';
import { C as CatalogTable } from './CatalogTable-B8071eCT.esm.js';
import { createTranslationRef, useTranslationRef } from '@backstage/core-plugin-api/alpha';
import { catalogEntityCreatePermission } from '@backstage/plugin-catalog-common/alpha';
import { usePermission } from '@backstage/plugin-permission-react';
import '@backstage/catalog-model';
import '@backstage/types';
import 'dataloader';
import 'expiry-map';
import 'zen-observable';
import '@material-ui/icons/Apartment';
import '@material-ui/icons/Category';
import '@material-ui/icons/Extension';
import '@material-ui/icons/FeaturedPlayList';
import '@material-ui/icons/LocationOn';
import '@material-ui/icons/Memory';
import '@material-ui/icons/People';
import '@material-ui/icons/Person';
import '@material-ui/icons/Storage';
import 'lodash';
import '@material-ui/core/Typography';
import '@material-ui/core/styles';
import '@mui/utils';
import '@material-ui/icons/Edit';
import '@material-ui/icons/OpenInNew';
import '@material-ui/icons/Star';
import '@material-ui/icons/StarBorder';
import 'pluralize';
import '@material-ui/core/Chip';
import '@material-ui/core/Toolbar';

const catalogTranslationRef = createTranslationRef({
  id: "catalog",
  messages: {
    indexPage: {
      title: `{{orgName}} Catalog`,
      createButtonTitle: "Create"
    }
  }
});

function BaseCatalogPage(props) {
  var _a;
  const { filters, content = /* @__PURE__ */ React.createElement(CatalogTable, null), pagination } = props;
  const orgName = (_a = useApi(configApiRef).getOptionalString("organization.name")) != null ? _a : "Backstage";
  const createComponentLink = useRouteRef(createComponentRouteRef);
  const { t } = useTranslationRef(catalogTranslationRef);
  const { allowed } = usePermission({
    permission: catalogEntityCreatePermission
  });
  return /* @__PURE__ */ React.createElement(PageWithHeader, { title: t("indexPage.title", { orgName }), themeId: "home" }, /* @__PURE__ */ React.createElement(Content, null, /* @__PURE__ */ React.createElement(ContentHeader, { title: "" }, allowed && /* @__PURE__ */ React.createElement(
    CreateButton,
    {
      title: t("indexPage.createButtonTitle"),
      to: createComponentLink && createComponentLink()
    }
  ), /* @__PURE__ */ React.createElement(SupportButton, null, "All your software catalog entities")), /* @__PURE__ */ React.createElement(EntityListProvider, { pagination }, /* @__PURE__ */ React.createElement(CatalogFilterLayout, null, /* @__PURE__ */ React.createElement(CatalogFilterLayout.Filters, null, filters), /* @__PURE__ */ React.createElement(CatalogFilterLayout.Content, null, content)))));
}
function DefaultCatalogPage(props) {
  const {
    columns,
    actions,
    initiallySelectedFilter = "owned",
    initialKind = "component",
    tableOptions = {},
    emptyContent,
    pagination,
    ownerPickerMode,
    filters,
    initiallySelectedNamespaces
  } = props;
  return /* @__PURE__ */ React.createElement(
    BaseCatalogPage,
    {
      filters: filters != null ? filters : /* @__PURE__ */ React.createElement(
        DefaultFilters,
        {
          initialKind,
          initiallySelectedFilter,
          ownerPickerMode,
          initiallySelectedNamespaces
        }
      ),
      content: /* @__PURE__ */ React.createElement(
        CatalogTable,
        {
          columns,
          actions,
          tableOptions,
          emptyContent
        }
      ),
      pagination
    }
  );
}

function CatalogPage(props) {
  const outlet = useOutlet();
  return outlet || /* @__PURE__ */ React.createElement(DefaultCatalogPage, { ...props });
}

export { BaseCatalogPage, CatalogPage, DefaultCatalogPage };
//# sourceMappingURL=index-B9rsO45f.esm.js.map
